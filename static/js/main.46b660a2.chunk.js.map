{"version":3,"sources":["assets/no_poster.jpg","reducers/index.js","store/index.js","actions/index.js","components/presentational/Pagination.js","components/presentational/SortShows.js","components/presentational/SearchByTitle.js","components/presentational/SearchByYear.js","components/presentational/Show.js","components/presentational/Shows.js","components/presentational/ShowsTable.js","components/container/App.js","index.js"],"names":["module","exports","__webpack_require__","p","rootReducer","combineReducers","postersState","state","arguments","length","undefined","action","type","Object","assign","posters","concat","toConsumableArray","poster","payload","showsState","objectSpread","shows","queryState","queries","sorting","title","year","page","pagesTotal","composeEnhancer","createLogger","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","fetchShowsSuccess","fetchPagesTotal","Pagination","clearInput","ReactDOM","findDOMNode","_this","refs","currentPageInput","value","_this2","this","lastPage","Math","max","props","currentPage","min","placeholder","react_default","a","createElement","className","disabled","onClick","onChange","ref","onFocus","e","target","onBlur","onKeyUp","event","pageIndex","clearTimeout","typingTimer","setTimeout","isNaN","alert","React","Component","SortShows","name","defaultValue","onSortingChange","SearchByTitle","onTitleChange","SearchByYear","onYearChange","Show","showNumber","src","posterUrl","alt","posterAlt","height","show","round","rating","ids","tvdb","aired_episodes","Shows","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showIndex","map","i","filter","thetvdb_id","toString","tvthumb","url","tvposter","no_poster","presentational_Show","key","ShowsTable","colSpan","presentational_SortShows","presentational_SearchByTitle","presentational_SearchByYear","presentational_Shows","fetchShows","_callee9","options","_ref13","limit","path","query","q","headers","response","json","regenerator_default","wrap","_context9","prev","next","join","extended","fields","years","keys","_","encodeURIComponent","Content-Type","trakt-api-version","trakt-api-key","fetch","sent","_ref14","score","get","abrupt","stop","fetchPoster","_callee10","showId","_context10","api_key","client_key","App","fetchPosters","asyncToGenerator","mark","_callee3","_context3","getState","forEach","item","fetchPosterWithRedux","fetchShowsByTitle","_callee4","_context4","generateTitleQuery","generatePageQuery","fetchShowsWithRedux","fetchShowsByYear","_callee5","_context5","generateYearQuery","fetchShowsBySorting","_ref7","_callee6","_context6","generateSortingQuery","_x5","apply","fetchShowsByPage","_ref8","_callee7","_context7","_x6","bind","assertThisInitialized","contentReady","setState","components_presentational_Pagination","pageCurrent","ShowsTable_ShowsTable","Container","connect","_ref3","_callee2","dispatch","_context2","t0","_x4","_ref","_callee","_ref2","_context","_x3","render","react_redux_es","container_App","document","getElementById"],"mappings":"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","file":"static/js/main.46b660a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_poster.eac23845.jpg\";","import {combineReducers} from \"redux\";\n\nconst posterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"FETCH_POSTER_SUCCESS\":\n            return Object.assign({}, state, {\n                posters: [\n                    ...state.posters/*.filter(poster => poster !== action.payload )*/ || [],\n                    {\n                        poster: action.payload\n                    }\n                ]\n            });\n        default:\n            return state;\n    }\n}\n\nconst showsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"FETCH_SHOWS_SUCCESS\":\n            return {...state, shows: action.payload};\n        case \"SEARCH_SHOWS_SUCCESS\":\n            return {...state, shows: action.payload};\n        default:\n            return state;\n    }\n}\n\nconst queryReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"GENERATE_SORTING_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    sorting: action.payload\n                }\n            });\n        case \"GENERATE_TITLE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    title: action.payload\n                }\n            });\n        case \"GENERATE_YEAR_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    year: action.payload\n                }\n            });\n        case \"GENERATE_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"GENERATE_PREV_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"GENERATE_NEXT_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"FETCH_CURRENT_PAGE\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"FETCH_PAGES_QUANTITY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    pagesTotal: action.payload\n                }\n            });\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    postersState: posterReducer,\n    showsState: showsReducer,\n    queryState: queryReducer\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst logger = createLogger();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    // applyMiddleware(logger, ReduxThunk),\n    composeEnhancer(applyMiddleware(/*logger,*/ ReduxThunk))\n);\n\nexport default store;","const FETCH_SHOWS_SUCCESS = \"FETCH_SHOWS_SUCCESS\";\nexport const fetchShowsSuccess = payload =>({\n        type: FETCH_SHOWS_SUCCESS,\n        payload\n})\n\nfunction fetchShowsError() {\n    return {\n        type: \"FETCH_SHOWS_ERROR\"\n    }\n}\nfunction fetchPosterSuccess(payload) {\n    return {\n        type: \"FETCH_POSTER_SUCCESS\",\n        payload\n    }\n}\nfunction fetchPosterError() {\n    return {\n        type: \"FETCH_POSTER_ERROR\"\n    }\n}\nfunction fetchCurrentPage(payload) {\n    return {\n        type: \"FETCH_CURRENT_PAGE\",\n        payload\n    }\n}\nfunction fetchPagesTotal(payload) {\n    return {\n        type: \"FETCH_PAGES_QUANTITY\",\n        payload\n    }\n}\nfunction generateTitleQuery(payload) {\n    return {\n        type: \"GENERATE_TITLE_QUERY\",\n        payload\n    }\n}\nfunction generateYearQuery(payload) {\n    return {\n        type: \"GENERATE_YEAR_QUERY\",\n        payload\n    }\n}\nfunction generateSortingQuery(payload) {\n    return {\n        type: \"GENERATE_SORTING_QUERY\",\n        payload\n    }\n}\nfunction generatePageQuery(payload) {\n    return {\n        type: \"GENERATE_PAGE_QUERY\",\n        payload\n    }\n}\nexport {\n    fetchShowsError,\n    fetchPosterSuccess,\n    fetchPosterError,\n    generateTitleQuery,\n    generateYearQuery,\n    generateSortingQuery,\n    generatePageQuery,\n    fetchCurrentPage,\n    fetchPagesTotal\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nclass Pagination extends React.Component {\n\n    typingTimer;\n    clearInput = () => {ReactDOM.findDOMNode(this.refs.currentPageInput).value=\"\"};\n\n    render() {\n        const lastPage = Math.max( +this.props.pagesTotal, 1 );\n        const currentPage = Math.min( Math.max( +this.props.currentPage, 1 ), lastPage);\n        const placeholder = `Current page: ${currentPage}`;\n        return (\n            <div className=\"pagination\">\n                <button\n                    disabled={currentPage < 2}\n                    value={currentPage}\n                    onClick={() => {this.props.onChange( Math.max(+currentPage - 1, 1) ); this.clearInput()}}\n                >\n                    {'<'}\n                </button>\n                <button\n                    disabled={currentPage === 1}\n                    onClick={() => {this.props.onChange(1); this.clearInput();}}\n                >\n                    1\n                </button>\n                <input\n                    ref=\"currentPageInput\"\n                    type=\"text\"\n                    placeholder={placeholder}\n                    onFocus={(e) => e.target.placeholder = \"\"}\n                    onBlur={(e) => e.target.placeholder = placeholder}\n                    onKeyUp={event => {\n                            let pageIndex = +event.target.value;\n                            clearTimeout(this.typingTimer);\n                            this.typingTimer = setTimeout(() => {\n                                if (isNaN(pageIndex)) {\n                                    alert(\"Sorry. There should be a number!\")\n                                } else {\n                                    pageIndex = pageIndex > this.props.pagesTotal ? this.props.pagesTotal : pageIndex;\n                                    if (pageIndex > 0) {\n                                        this.props.onChange(pageIndex);\n                                        this.clearInput();\n                                    }\n                                }\n                            }, 1000);\n                        }\n                    }\n                />\n                <button\n                    value={ lastPage }\n                    onClick={() => {this.props.onChange(lastPage); this.clearInput()}}\n                >\n                    Last page: { lastPage }\n                </button>\n                <button\n                    disabled={currentPage > lastPage - 1}\n                    value={currentPage}\n                    onClick={() => {\n                        this.props.onChange(+currentPage + 1); this.clearInput()}}\n                >\n                    {'>'}\n                </button>\n            </div>\n        )\n    }\n}\n\nPagination.propTypes = {\n    pagesTotal: PropTypes.number,\n    currentPage: PropTypes.number\n};\n\nexport default Pagination;","import React from 'react';\nimport './SortShows.css';\n\nfunction SortShows (props){\n    return (\n        <select\n            className=\"sort-shows\"\n            name = \"sortShows\"\n            defaultValue={\"popular\"}\n            onChange={ event => props.onSortingChange(event.target.value) }\n        >\n            <option value={\"popular\"}>popular</option>\n            <option value={\"trending\"}>trending</option>\n            <option value={\"played\"}>played</option>\n            <option value={\"watched\"}>watched</option>\n            <option value={\"anticipated\"}>anticipated</option>\n        </select>\n    )\n}\n\nexport default SortShows;","import React from 'react';\nimport './SearchByTitle.css';\n\nfunction SearchByTitle (props) {\n\n    return (\n        <input\n            className=\"search-by-title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            onFocus={ event => event.target.placeholder = \"\" }\n            onBlur={ event => event.target.placeholder = \"Title\" }\n            onKeyUp={ event => props.onTitleChange(event.target.value) }\n        />\n    )\n}\n\nexport default SearchByTitle;","import React from 'react';\nimport './SearchByYear.css';\n\nfunction SearchByYear(props){\n    return (\n        <input\n            className={ 'search-by-year' }\n            type={ 'text' }\n            placeholder={ 'Year' }\n            onFocus={ event => event.target.placeholder = \"\" }\n            onBlur={ event => event.target.placeholder = \"Year\" }\n            onKeyUp={ event => props.onYearChange(event.target.value) }\n        />\n    );\n}\n\nexport default SearchByYear;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Show.css';\n\nfunction Show (props){\n    return (\n        <tr className=\"show\">\n            <td className=\"showNumber\">{props.showNumber}</td>\n            <td className=\"showPoster\">\n                <img\n                    src={props.posterUrl}\n                    alt={props.posterAlt}\n                    height=\"50px\"\n                    // onLoad={props.load.bind(this)}\n                    // onError={props.load.bind(this)}\n                />\n            </td>\n            <td className=\"title\">{props.show.title}</td>\n            <td className=\"rating\">{Math.round(props.show.rating * 100)/100}</td>\n            <td className=\"year\">{props.show.year}</td>\n            <td className=\"showId\">{props.show.ids.tvdb}</td>\n            <td className=\"episodes\">{props.show.aired_episodes}</td>\n        </tr>\n    )\n}\nShow.propTypes = {\n    posterUrl: PropTypes.string,\n    posterAlt: PropTypes.string,\n    show: PropTypes.object\n};\n\nexport default Show;","import React from 'react';\nimport Show from \"./Show\";\nimport no_poster from \"../../assets/no_poster.jpg\";\n\nclass Shows extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let shows = this.props.shows,\n            posterUrl,\n            poster,\n            posterAlt,\n            // postersFetchingQuantity = \"store max count of (un)fetched posters\",\n            showIndex = this.props.queries ? 10 * (this.props.queries.page - 1) : 1;\n\n        shows = shows && shows.map((show, i) => {\n            showIndex++;\n            if (this.props.posters) { // TODO: optionally - check store count of posters === 0\n                poster = this.props.posters.filter(poster => {\n                    return poster.poster.thetvdb_id === show.ids.tvdb.toString();\n                });\n                if(poster[0] && poster[0].poster.tvthumb) {\n                    posterUrl = poster[0].poster.tvthumb[0].url;\n                    posterAlt = posterUrl;\n                } else if (poster[0] && poster[0].poster.tvposter){\n                    posterUrl = poster[0].poster.tvposter[0].url;\n                    posterAlt = posterUrl;\n                } else{\n                    posterUrl = { no_poster }.no_poster;\n                    posterAlt = 'no poster'\n                }\n            }\n            // const posterLoad = () => {\n            //     postersFetchingQuantity--;\n            //     if (!postersFetchingQuantity) {\n            //         // console.log('loaded');\n            //     }\n            // };\n            return (<Show\n                posters = {this.props.posters}\n                posterUrl = {posterUrl}\n                posterAlt = {posterAlt}\n                key={i+1}\n                showNumber={showIndex}\n                show={show}\n                // load={posterLoad}\n                // error={posterLoad}\n            />)}\n\n        );\n        return(\n            <tbody>{shows}</tbody>\n        )\n    }\n\n}\n\nexport default Shows;","import React from 'react';\nimport SortShows from \"./SortShows\";\nimport SearchByTitle from \"./SearchByTitle\";\nimport SearchByYear from \"./SearchByYear\";\nimport Shows from \"./Shows\";\nimport './ShowsTable.css';\n\nexport default function ShowsTable (props) {\n    return(\n        <table>\n            <thead>\n            <tr>\n                <td colSpan=\"2\">\n                    <SortShows onSortingChange={props.onSortingChange} />\n                </td>\n                <td>\n                    <SearchByTitle onTitleChange={props.onTitleChange} />\n                </td>\n                <td>Rank</td>\n                <td>\n                    <SearchByYear onYearChange={props.onYearChange} />\n                </td>\n                <td>TVDB Id</td>\n                <td>No of<br/>Episodes</td>\n            </tr>\n            </thead>\n            <Shows\n                posters={props.posters}\n                shows={props.shows}\n                queries={props.queries}\n            />\n        </table>\n    )\n}","import React from 'react';\nimport store from '../../store';\nimport {connect} from 'react-redux';\nimport {\n    fetchShowsSuccess,\n    fetchShowsError,\n    fetchPosterSuccess,\n    fetchPosterError,\n    generateYearQuery,\n    generateTitleQuery,\n    fetchCurrentPage,\n    fetchPagesTotal,\n    generateSortingQuery,\n    generatePageQuery\n} from '../../actions';\nimport Pagination from \"../presentational/Pagination\";\nimport ShowsTable from \"../presentational/ShowsTable\";\n\nasync function fetchShows(options) {\n\n    const { title, year, sorting, page, limit, } = options || {};\n    const path = ( sorting && sorting !== 'popular' ? [ 'shows', sorting, ] : ['search', 'show', ] ).join('/');\n    const query = {\n        extended: 'full',\n        query: title || '',\n        fields: 'title',\n        years: year,\n        page: page || 0,\n        limit: limit || 10,\n    };\n    const q = Object.keys(query)\n        .filter(_ => _==='query' || query[_] )\n        .map(_ => [ _, query[_] ].map(_ => encodeURIComponent(_)).join('=') )\n        .join('&');\n    const url = `https://api.trakt.tv/${ path }?${ q }`;\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \"trakt-api-version\": \"2\",\n        \"trakt-api-key\": \"31f15cbdee3e55e2ceca6cd2e0e3ba9791b4f1feb1f7bab08c3d8ca6e018609a\"\n    };\n    const response = await fetch(url, { headers });\n    let json = await response.json();\n    json = json.map(_ => {\n        const { score, show, type } = _ || {};\n        return { score, type, ...show };\n    });\n    const currentPage = response.headers.get('x-pagination-page');\n    const pagesTotal = response.headers.get('x-pagination-page-count');\n    return { json, currentPage, pagesTotal };\n}\n\nasync function fetchPoster(showId) {\n    const path = [ 'v3', 'tv', showId, ].join('/');\n    const query = {\n        api_key: 'ab75dec43906f846e6200633b9ad43c7',\n        client_key: '4c61b1676e8869c4553df95839f5a827',\n    };\n    const q = Object.keys(query)\n        .filter(_ => query[_] )\n        .map(_ => [ _, query[_] ].map(_ => encodeURIComponent(_)).join('=') )\n        .join('&');\n    const url = `https://private-anon-d2c67a30e4-fanarttv.apiary-proxy.com/${ path }?${ q }`;\n    // const url = `https://api.thetvdb.com/series/${showId}/images/query?keyType=poster`;              //tvdb\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        // 'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTc5MDE4MDcsImlkIjoiZGF0YS1mZXRjaGluZy1hcHAiLCJvcmlnX2lhdCI6MTU1NzgxNTQwNywidXNlcmlkIjo1Mjc5NTIsInVzZXJuYW1lIjoiYW5uYS5wb3BvdnNrYS5maXJlZmx5YjM2In0.nBj-hDm7l4eLQHxCjhiNLc8UeZQZseiw5fKNpssGm1gF8twwGHsOjA7ra7qGZDMwKwo6sLw9egVw2jPUR4xV_WMJ4o02X7x15Ksk5WUXQ1k__7UzvW3vqfkzfXgq93kZW5dknZ97sYh1R06flr0pxICq1QIpOu2JjK3XeXS2VhkPAAzKXdHcEIW_t2ssRnOZe_Cx5l9JrZS-KzvfB-ckEMCdS1YMldTey6GTmllJSYg1ZsgfVWTivAsJKe0OV-4Z40hIDJi2rp4SrfCafyrWS3p3zV4yFhdwpdigc-F0sRQ823cUqoyg54QEmmNQtD5QUPHrlnC3t449gfgVrNlAuw'\n    };\n    const response = await fetch(url, {\n        headers,\n        // mode: 'no-cors'\n    });\n\n    const json = await response.json();\n    return json;\n}\n\nfunction fetchShowsWithRedux(options) {\n    return async (dispatch) => {\n        try {\n            const { json, currentPage, pagesTotal } = await fetchShows(options);\n            dispatch(fetchShowsSuccess(json));\n            dispatch(fetchCurrentPage(currentPage));\n            dispatch(fetchPagesTotal(pagesTotal));\n        } catch (e) {\n            dispatch(fetchShowsError());\n        }\n    }\n}\n\nfunction fetchPosterWithRedux(showId) {\n    return async ( dispatch ) => {\n        try {\n            const json = await fetchPoster(showId);\n            dispatch(fetchPosterSuccess(json));\n        } catch (e) {\n            dispatch(fetchPosterError());\n        }\n        // TODO: optionally - decrement store count of posters async load calls\n    }\n}\n\n///////////////////////// React component //////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.generateTitleQuery = this.props.generateTitleQuery.bind(this);\n        this.generateYearQuery = this.props.generateYearQuery.bind(this);\n        this.generatePageQuery = this.props.generatePageQuery.bind(this);\n        this.typingTimer = 0;\n        this.state = { contentReady: false }\n    }\n\n    async componentDidMount() {\n        await this.props.fetchShowsWithRedux();\n        await this.fetchPosters();\n        this.setState({ contentReady: true });\n        // console.log(this.state.contentReady);\n    }\n\n    fetchPosters = async () => {\n        const shows = store.getState().showsState.shows || [];\n        const posters = store.getState().postersState.posters;\n        // TODO: optionally - store max count of posters async load calls\n        await shows.forEach( (show) => {\n            if (posters)\n            {\n                if (posters.filter((item) => +item.poster.thetvdb_id === show.ids.tvdb).length !== 0){\n                    return;\n                } else return this.props.fetchPosterWithRedux(show.ids.tvdb);\n            } else return this.props.fetchPosterWithRedux(show.ids.tvdb);\n        })\n    }\n\n    fetchShowsByTitle = (title) => {\n        clearTimeout(this.typingTimer);\n        this.typingTimer = setTimeout(\n            async () => {\n                this.generateTitleQuery(title);\n                this.generatePageQuery(1);\n                const options = store.getState().queryState.queries;\n                await this.props.fetchShowsWithRedux(options);\n                this.fetchPosters();\n            }, 500);\n    }\n\n    fetchShowsByYear = (year) => {\n        clearTimeout(this.typingTimer);\n        this.typingTimer = setTimeout(\n            async () => {\n                if (isNaN(year)) {\n                    alert(\"Sorry. There should be a four-digit-number!\")\n                } else {\n                    this.generateYearQuery(year);\n                    this.generatePageQuery(1);\n                    const options = store.getState().queryState.queries;\n                    await this.props.fetchShowsWithRedux(options);\n                    this.fetchPosters();\n                }\n            }, 500);\n    }\n\n    fetchShowsBySorting = async (sorting) => {\n        this.props.generateSortingQuery(sorting);\n        this.props.generatePageQuery(1);\n        const options = store.getState().queryState.queries;\n        await this.props.fetchShowsWithRedux(options);\n        this.fetchPosters();\n    }\n\n    get pageCurrent () {\n        const {queries} = store.getState().queryState || {};\n        const {page} = queries || {};\n        return +page || 1;\n    }\n    get pagesTotal () {\n        const {queries} = store.getState().queryState || {};\n        const {pagesTotal} = queries || {};\n        return +pagesTotal || 1;\n    }\n\n    fetchShowsByPage = async (pageIndex) => {\n        this.props.generatePageQuery(pageIndex);\n        const options = store.getState().queryState.queries;\n        await this.props.fetchShowsWithRedux(options);\n        this.fetchPosters();\n    }\n\n    render(){\n        return (\n            <div>\n                <Pagination\n                    currentPage={ this.pageCurrent }\n                    pagesTotal={ this.pagesTotal }\n                    onChange={ this.fetchShowsByPage }\n                />\n                <ShowsTable\n                    posters={this.props.posters}\n                    shows={this.props.shows}\n                    queries={this.props.queries}\n                    onSortingChange={this.fetchShowsBySorting}\n                    onTitleChange={this.fetchShowsByTitle}\n                    onYearChange={this.fetchShowsByYear}\n                />\n                <Pagination\n                    currentPage={ this.pageCurrent }\n                    pagesTotal={ this.pagesTotal }\n                    onChange={ this.fetchShowsByPage.bind(this) }\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        posters: state.postersState.posters,\n        shows: state.showsState.shows,\n        queries: state.queryState.queries\n    }\n}\n\nlet Container = connect(mapStateToProps, {\n    fetchPosterWithRedux,\n    fetchShowsWithRedux,\n    generateTitleQuery,\n    generateYearQuery,\n    generateSortingQuery,\n    generatePageQuery\n})(App);\n\nexport default Container;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/index';\nimport {Provider} from 'react-redux';\nimport Container from './components/container/App';\nimport './index.css';\n\nReactDOM.render(\n    <div>\n        <Provider store={store}>\n            <Container />\n        </Provider>\n    </div>,\n    document.getElementById('root')\n);"],"sourceRoot":""}