{"version":3,"sources":["assets/no_poster.jpg","reducers/index.js","store/index.js","actions/index.js","components/SearchByTitle.js","components/SearchByYear.js","components/SortShows.js","components/Pagination.js","components/Show.js","components/Shows.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","rootReducer","combineReducers","postersState","state","arguments","length","undefined","action","type","Object","assign","posters","concat","toConsumableArray","poster","payload","showsState","objectSpread","shows","queryState","queries","sorting","title","year","page","pagesTotal","composeEnhancer","createLogger","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","fetchShowsSuccess","fetchPagesTotal","SearchByTitle","props","react_default","a","createElement","className","placeholder","onFocus","event","target","onBlur","onKeyUp","fetchShowsByTitle","value","SearchByYear","fetchShowsByYear","SortShows","name","defaultValue","onChange","fetchShowsBySorting","style","width","Pagination","clearInput","ReactDOM","findDOMNode","_this","refs","currentPageInput","_this2","this","lastPage","currentPage","disabled","onClick","fetchShowsByPage","ref","e","fetchShowsByEnteredPage","setTimeout","React","Component","connect","Show","showNumber","src","posterUrl","alt","posterAlt","height","onLoad","load","bind","onError","show","rating","ids","tvdb","aired_episodes","Shows","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showIndex","map","i","filter","thetvdb_id","toString","tvposter","url","no_poster","posterLoad","postersFetchingQuantity","components_Show","key","error","fetchShows","_callee10","options","_ref10","limit","path","query","q","headers","response","json","regenerator_default","wrap","_context10","prev","next","join","extended","fields","years","keys","_","encodeURIComponent","Content-Type","trakt-api-version","trakt-api-key","fetch","sent","_ref11","score","get","abrupt","stop","fetchPoster","_callee11","showId","_context11","api_key","client_key","App","fetchPosters","asyncToGenerator","mark","_callee3","_context3","getState","forEach","item","fetchPosterWithRedux","clearTimeout","typingTimer","_callee4","_context4","generateTitleQuery","generatePageQuery","fetchShowsWithRedux","_callee5","_context5","isNaN","alert","generateYearQuery","_ref7","_callee6","_context6","generateSortingQuery","_x5","apply","_ref8","_callee7","_context7","_x6","_callee8","_context8","assertThisInitialized","contentReady","setState","src_components_Pagination","colSpan","components_SortShows","components_SearchByTitle","components_SearchByYear","components_Shows","Container","_ref3","_callee2","dispatch","_context2","t0","_x4","_ref","_callee","_ref2","_context","_x3","render","react_redux_es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.326aed47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_poster.eac23845.jpg\";","import {combineReducers} from \"redux\";\n\nconst posterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"FETCH_POSTER_SUCCESS\":\n            return Object.assign({}, state, {\n                posters: [\n                    ...state.posters/*.filter(poster => poster !== action.payload )*/ || [],\n                    {\n                        poster: action.payload\n                    }\n                ]\n            });\n        default:\n            return state;\n    }\n}\n\nconst showsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"FETCH_SHOWS_SUCCESS\":\n            return {...state, shows: action.payload};\n        case \"SEARCH_SHOWS_SUCCESS\":\n            return {...state, shows: action.payload};\n        default:\n            return state;\n    }\n}\n\nconst queryReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"GENERATE_SORTING_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    sorting: action.payload\n                }\n            });\n        case \"GENERATE_TITLE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    title: action.payload\n                }\n            });\n        case \"GENERATE_YEAR_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    year: action.payload\n                }\n            });\n        case \"GENERATE_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"GENERATE_PREV_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"GENERATE_NEXT_PAGE_QUERY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"FETCH_CURRENT_PAGE\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    page: action.payload\n                }\n            });\n        case \"FETCH_PAGES_QUANTITY\":\n            return Object.assign({}, state, {\n                queries: {\n                    ...state.queries,\n                    pagesTotal: action.payload\n                }\n            });\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    postersState: posterReducer,\n    showsState: showsReducer,\n    queryState: queryReducer\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst logger = createLogger();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    // applyMiddleware(logger, ReduxThunk),\n    composeEnhancer(applyMiddleware(/*logger,*/ ReduxThunk))\n);\n\nexport default store;","const FETCH_SHOWS_SUCCESS = \"FETCH_SHOWS_SUCCESS\";\nexport const fetchShowsSuccess = payload =>({\n        type: FETCH_SHOWS_SUCCESS,\n        payload\n})\n\nfunction fetchShowsError() {\n    return {\n        type: \"FETCH_SHOWS_ERROR\"\n    }\n}\nfunction fetchPosterSuccess(payload) {\n    return {\n        type: \"FETCH_POSTER_SUCCESS\",\n        payload\n    }\n}\nfunction fetchPosterError() {\n    return {\n        type: \"FETCH_POSTER_ERROR\"\n    }\n}\nfunction fetchCurrentPage(payload) {\n    return {\n        type: \"FETCH_CURRENT_PAGE\",\n        payload\n    }\n}\nfunction fetchPagesTotal(payload) {\n    return {\n        type: \"FETCH_PAGES_QUANTITY\",\n        payload\n    }\n}\nfunction generateTitleQuery(payload) {\n    return {\n        type: \"GENERATE_TITLE_QUERY\",\n        payload\n    }\n}\nfunction generateYearQuery(payload) {\n    return {\n        type: \"GENERATE_YEAR_QUERY\",\n        payload\n    }\n}\nfunction generateSortingQuery(payload) {\n    return {\n        type: \"GENERATE_SORTING_QUERY\",\n        payload\n    }\n}\nfunction generatePageQuery(payload) {\n    return {\n        type: \"GENERATE_PAGE_QUERY\",\n        payload\n    }\n}\nexport {\n    fetchShowsError,\n    fetchPosterSuccess,\n    fetchPosterError,\n    generateTitleQuery,\n    generateYearQuery,\n    generateSortingQuery,\n    generatePageQuery,\n    fetchCurrentPage,\n    fetchPagesTotal\n}","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './SearchByTitle.css';\n\nfunction SearchByTitle (props) {\n\n     // clearInput() {ReactDOM.findDOMNode(this.refs.currentPageInput).value=\"\"};\n\n    return (\n        <input\n            className=\"search-by-title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            onFocus={event => event.target.placeholder = \"\"}\n            onBlur={event => event.target.placeholder = \"Title\"}\n            onKeyUp={event => {props.fetchShowsByTitle(event.target.value)/*; console.log('input ref: ', ReactDOM.findDOMNode(this.refs.currentPageInput))*/}}\n        />\n    )\n}\n\nexport default SearchByTitle;","import React from 'react';\nimport './SearchByYear.css';\n\nfunction SearchByYear(props){\n    return (\n        <input\n            className={ 'search-by-year' }\n            type={ 'text' }\n            placeholder={ 'Year' }\n            onFocus={ event => event.target.placeholder = \"\" }\n            onBlur={ event => event.target.placeholder = \"Year\" }\n            onKeyUp={ event => props.fetchShowsByYear(event.target.value) }\n        />\n    );\n}\n\nexport default SearchByYear;","import React from 'react';\nimport './SortShows.css';\n\nfunction SortShows (props){\n    return (\n        <select\n            className=\"sort-shows\"\n            name = \"sortShows\"\n            defaultValue={\"popular\"}\n            onChange={event => props.fetchShowsBySorting(event.target.value) }\n            style={{width: 100 + '%'}}\n        >\n            <option value={\"popular\"}>popular</option>\n            <option value={\"trending\"}>trending</option>\n            <option value={\"played\"}>played</option>\n            <option value={\"watched\"}>watched</option>\n            <option value={\"anticipated\"}>anticipated</option>\n        </select>\n    )\n}\n\nexport default SortShows;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux';\nimport './Pagination.css';\n\nclass Pagination extends React.Component {\n\n    clearInput = () => {ReactDOM.findDOMNode(this.refs.currentPageInput).value=\"\"};\n\n    render() {\n        let lastPage = this.props.queries && this.props.queries.pagesTotal || 1;\n        let currentPage = this.props.queries && this.props.queries.page || 1;\n        let placeholder = `Current page: ${currentPage}`;\n        return (\n            <div className=\"pagination\">\n                <button\n                    disabled={currentPage < 2}\n                    value={currentPage}\n                    onClick={() => {this.props.fetchShowsByPage(+currentPage - 1); this.clearInput()}}\n                >\n                    {'<'}\n                </button>\n                <button\n                    disabled={currentPage === \"1\"}\n                    onClick={() => {this.props.fetchShowsByPage(1); this.clearInput()}}\n                >\n                    1\n                </button>\n                <input\n                    ref=\"currentPageInput\"\n                    type=\"text\"\n                    placeholder={placeholder}\n                    onFocus={(e) => e.target.placeholder = \"\"}\n                    onBlur={(e) => e.target.placeholder = placeholder}\n                    onKeyUp={event => {\n                            this.props.fetchShowsByEnteredPage(event.target.value);\n                            setTimeout(() => {\n                                this.clearInput();\n                            }, 5000)\n                        }\n                    }\n                />\n                <button\n                    value={ lastPage }\n                    onClick={() => {this.props.fetchShowsByPage(lastPage); this.clearInput()}}\n                >\n                    Last page: { lastPage }\n                </button>\n                <button\n                    disabled={currentPage > lastPage - 1}\n                    value={currentPage}\n                    onClick={() => {\n                        this.props.fetchShowsByPage(+currentPage + 1); this.clearInput()}}\n                >\n                    {'>'}\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        queries: state.queryState.queries\n    }\n}\n\nexport default connect(mapStateToProps)(Pagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Show.css';\n\nfunction Show (props){\n    return (\n        <tr className=\"show\">\n            <td className=\"showNumber\">{props.showNumber}</td>\n            <td className=\"showPoster\">\n                <img\n                    src={props.posterUrl}\n                    alt={props.posterAlt}\n                    height=\"50px\"\n                    onLoad={props.load.bind(this)}\n                    onError={props.load.bind(this)}\n                />\n            </td>\n            <td className=\"title\">{props.show.title}</td>\n            <td className=\"rating\">{props.show.rating}</td>\n            <td className=\"year\">{props.show.year}</td>\n            <td className=\"showId\">{props.show.ids.tvdb}</td>\n            <td className=\"episodes\">{props.show.aired_episodes}</td>\n        </tr>\n    )\n}\nShow.propTypes = {\n    posterUrl: PropTypes.string,\n    posterAlt: PropTypes.string,\n    show: PropTypes.object\n\n};\n\nexport default Show;","import React from 'react';\nimport Show from \"./Show\";\nimport no_poster from \"../assets/no_poster.jpg\";\n\nclass Shows extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let shows = this.props.shows;\n        let posterUrl,\n            poster,\n            posterAlt,\n            postersFetchingQuantity = \"store max count of (un)fetched posters\",\n            showIndex = this.props.queries ? 10 * (this.props.queries.page - 1) : 1;\n        shows = shows && shows.map((show, i) => {\n            showIndex++;\n            if (this.props.posters) { // TODO: check store count of posters === 0\n                poster = this.props.posters.filter(poster => {\n                    return poster.poster.thetvdb_id === show.ids.tvdb.toString();\n                });\n                if(poster[0] && poster[0].poster.tvposter) {\n                    posterUrl = poster[0].poster.tvposter[0].url;\n                    posterAlt = posterUrl;\n                } else{\n                    posterUrl = { no_poster }.no_poster;\n                    posterAlt = 'no poster'\n                }\n            }\n            const posterLoad = () => {\n                postersFetchingQuantity--;\n                if (!postersFetchingQuantity) {\n                    // console.log('loaded');\n                }\n            };\n            return (<Show\n                posters = {this.props.posters}\n                posterUrl = {posterUrl}\n                posterAlt = {posterAlt}\n                key={i+1}\n                showNumber={showIndex}\n                show={show}\n                load={posterLoad}\n                error={posterLoad}\n            />)}\n\n        );\n        return(\n            <tbody>{shows}</tbody>\n        )\n    }\n\n}\n\nexport default Shows;","import React from 'react';\nimport store from '../store/index';\nimport {connect} from 'react-redux';\nimport {\n    fetchShowsSuccess,\n    fetchShowsError,\n    fetchPosterSuccess,\n    fetchPosterError,\n    generateYearQuery,\n    generateTitleQuery,\n    fetchCurrentPage,\n    fetchPagesTotal,\n    generateSortingQuery,\n    generatePageQuery\n} from '../actions';\nimport SearchByTitle from \"./SearchByTitle\";\nimport SearchByYear from \"./SearchByYear\";\nimport SortShows from \"./SortShows\";\nimport Pagination from \"./Pagination\";\nimport Shows from \"./Shows\";\nimport './App.css';\n\nasync function fetchShows(options) {\n\n    const { title, year, sorting, page, limit, } = options || {};\n    const path = ( sorting && sorting !== 'popular' ? [ 'shows', sorting, ] : ['search', 'show', ] ).join('/');\n    const query = {\n        extended: 'full',\n        query: title || '',\n        fields: 'title',\n        years: year,\n        page: page || 0,\n        limit: limit || 10,\n    };\n    const q = Object.keys(query)\n        .filter(_ => _==='query' || query[_] )\n        .map(_ => [ _, query[_] ].map(_ => encodeURIComponent(_)).join('=') )\n        .join('&');\n    const url = `https://api.trakt.tv/${ path }?${ q }`;\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \"trakt-api-version\": \"2\",\n        \"trakt-api-key\": \"31f15cbdee3e55e2ceca6cd2e0e3ba9791b4f1feb1f7bab08c3d8ca6e018609a\"\n    };\n    const response = await fetch(url, { headers });\n    let json = await response.json();\n    json = json.map(_ => {\n        const { score, show, type } = _ || {};\n        return { score, type, ...show };\n    });\n    const currentPage = response.headers.get('x-pagination-page');\n    const pagesTotal = response.headers.get('x-pagination-page-count');\n    return { json, currentPage, pagesTotal };\n}\n\nasync function fetchPoster(showId) {\n    const path = [ 'v3', 'tv', showId, ].join('/');\n    const query = {\n        api_key: 'ab75dec43906f846e6200633b9ad43c7',\n        client_key: '4c61b1676e8869c4553df95839f5a827',\n    };\n    const q = Object.keys(query)\n        .filter(_ => query[_] )\n        .map(_ => [ _, query[_] ].map(_ => encodeURIComponent(_)).join('=') )\n        .join('&');\n    const url = `https://private-anon-d2c67a30e4-fanarttv.apiary-proxy.com/${ path }?${ q }`;\n    // const url = `https://api.thetvdb.com/series/${showId}/images/query?keyType=poster`;              //tvdb\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        // 'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTc5MDE4MDcsImlkIjoiZGF0YS1mZXRjaGluZy1hcHAiLCJvcmlnX2lhdCI6MTU1NzgxNTQwNywidXNlcmlkIjo1Mjc5NTIsInVzZXJuYW1lIjoiYW5uYS5wb3BvdnNrYS5maXJlZmx5YjM2In0.nBj-hDm7l4eLQHxCjhiNLc8UeZQZseiw5fKNpssGm1gF8twwGHsOjA7ra7qGZDMwKwo6sLw9egVw2jPUR4xV_WMJ4o02X7x15Ksk5WUXQ1k__7UzvW3vqfkzfXgq93kZW5dknZ97sYh1R06flr0pxICq1QIpOu2JjK3XeXS2VhkPAAzKXdHcEIW_t2ssRnOZe_Cx5l9JrZS-KzvfB-ckEMCdS1YMldTey6GTmllJSYg1ZsgfVWTivAsJKe0OV-4Z40hIDJi2rp4SrfCafyrWS3p3zV4yFhdwpdigc-F0sRQ823cUqoyg54QEmmNQtD5QUPHrlnC3t449gfgVrNlAuw'\n    };\n    const response = await fetch(url, {\n        headers,\n        // mode: 'no-cors'\n    });\n\n    const json = await response.json();\n    return json;\n}\n\nfunction fetchShowsWithRedux(options) {\n    return async (dispatch) => {\n        try {\n            const { json, currentPage, pagesTotal } = await fetchShows(options);\n            dispatch(fetchShowsSuccess(json));\n            dispatch(fetchCurrentPage(currentPage));\n            dispatch(fetchPagesTotal(pagesTotal));\n        } catch (e) {\n            dispatch(fetchShowsError());\n        }\n    }\n}\n\nfunction fetchPosterWithRedux(showId) {\n    return async ( dispatch ) => {\n        try {\n            const json = await fetchPoster(showId);\n            dispatch(fetchPosterSuccess(json));\n        } catch (e) {\n            dispatch(fetchPosterError());\n        }\n        // TODO: decrement store count of posters async load calls\n    }\n}\n\n///////////////////////// React component //////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.generateTitleQuery = this.props.generateTitleQuery.bind(this);\n        this.generateYearQuery = this.props.generateYearQuery.bind(this);\n        this.generatePageQuery = this.props.generatePageQuery.bind(this);\n        this.typingTimer = 0;\n        this.state = { contentReady: false }\n    }\n\n    async componentDidMount() {\n        await this.props.fetchShowsWithRedux();\n        await this.fetchPosters();\n        this.setState({ contentReady: true });\n        // console.log(this.state.contentReady);\n    }\n\n    fetchPosters = async () => {\n        const shows = store.getState().showsState.shows || [];\n        const posters = store.getState().postersState.posters;\n        // TODO: store max count of posters async load calls\n        await shows.forEach( (show) => {\n            if (posters)\n            {\n                if (posters.filter((item) => +item.poster.thetvdb_id === show.ids.tvdb).length !== 0){\n                    return;\n                } else return this.props.fetchPosterWithRedux(show.ids.tvdb);\n            } else return this.props.fetchPosterWithRedux(show.ids.tvdb);\n        })\n    }\n\n    fetchShowsByTitle = (title) => {\n        clearTimeout(this.typingTimer);\n        if (title) {\n            this.typingTimer = setTimeout(\n                async () => {\n                    this.generateTitleQuery(title);\n                    this.generatePageQuery(1);\n                    const options = store.getState().queryState.queries;\n                    await this.props.fetchShowsWithRedux(options);\n                    this.fetchPosters();\n                }, 1000);\n        }\n    }\n\n    fetchShowsByYear = (year) => {\n        clearTimeout(this.typingTimer);\n        if (year) {\n            this.typingTimer = setTimeout(\n                async () => {\n                    if (isNaN(year)) {\n                        alert(\"Sorry. There should be a four-digit-number!\")\n                    } else {\n                        this.generateYearQuery(year);\n                        this.generatePageQuery(1);\n                        const options = store.getState().queryState.queries;\n                        await this.props.fetchShowsWithRedux(options);\n                        this.fetchPosters();\n                    }\n                }, 1000);\n        }\n    }\n\n    fetchShowsBySorting = async (sorting) => {\n        this.props.generateSortingQuery(sorting);\n        this.props.generatePageQuery(1);\n        const options = store.getState().queryState.queries;\n        await this.props.fetchShowsWithRedux(options);\n        this.fetchPosters();\n    }\n\n    fetchShowsByPage = async (page) => {\n        this.props.generatePageQuery(page);\n        const options = store.getState().queryState.queries;\n        await this.props.fetchShowsWithRedux(options);\n        this.fetchPosters();\n    }\n\n    fetchShowsByEnteredPage = (page) => {\n        clearTimeout(this.typingTimer);\n        if (page) {\n            this.typingTimer = setTimeout(\n                async () => {\n                    if (isNaN(page)) {\n                        alert(\"Sorry. There should be a number!\")\n                    } else {\n                        const lastPage = +store.getState().queryState.queries.pagesTotal;\n                        page = +page > lastPage ? lastPage : page;\n                        page = +page < 1 ? 1 : page;\n                        this.generatePageQuery(page);\n                        let options = store.getState().queryState.queries;\n                        await this.props.fetchShowsWithRedux(options);\n                        this.fetchPosters();\n                    }\n                }, 1000);\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Pagination\n                    fetchShowsByPage={this.fetchShowsByPage}\n                    fetchShowsByEnteredPage={this.fetchShowsByEnteredPage}\n                />\n                <table>\n                    <thead>\n                        <tr>\n                            <td colSpan=\"2\">\n                                <SortShows fetchShowsBySorting={this.fetchShowsBySorting} />\n                            </td>\n                            <td>\n                                <SearchByTitle fetchShowsByTitle={this.fetchShowsByTitle} />\n                            </td>\n                            <td>Rank</td>\n                            <td>\n                                <SearchByYear fetchShowsByYear={this.fetchShowsByYear} />\n                            </td>\n                            <td>TVDB Id</td>\n                            <td>No of<br/>Episodes</td>\n                        </tr>\n                    </thead>\n                    <Shows\n                        posters={this.props.posters}\n                        shows={this.props.shows}\n                        queries={this.props.queries}\n                    />\n                </table>\n                <Pagination\n                    fetchShowsByPage={this.fetchShowsByPage}\n                    fetchShowsByEnteredPage={this.fetchShowsByEnteredPage}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        posters: state.postersState.posters,\n        shows: state.showsState.shows,\n        queries: state.queryState.queries\n    }\n}\n\nlet Container = connect(mapStateToProps, {\n    fetchPosterWithRedux,\n    fetchShowsWithRedux,\n    generateTitleQuery,\n    generateYearQuery,\n    generateSortingQuery,\n    generatePageQuery\n})(App);\n\nexport default Container;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/index';\nimport {Provider} from 'react-redux';\nimport Container from './components/App';\nimport './index.css';\n\nReactDOM.render(\n    <div>\n        <Provider store={store}>\n            <Container />\n        </Provider>\n    </div>,\n    document.getElementById('root')\n);"],"sourceRoot":""}